# There is a rectangle of given width w and height h,

# On the width side, you are given a list of measurements.
# On the height side, you are given another list of measurements.

# Draw perpendicular lines from the measurements to partition the rectangle into smaller rectangles.

# In all sub-rectangles (include the combinations of smaller rectangles), how many of them are squares?


# Example

# w = 10
# h = 5
# measurements on x-axis: 2, 5
# measurements on y-axis: 3

#    ___2______5__________ 
#   |   |      |          |
#   |   |      |          |
#  3|___|______|__________|
#   |   |      |          |
#   |___|______|__________|

# Number of squares in sub-rectangles = 4 (one 2x2, one 3x3, two 5x5)

# hs are horizontal measurements to divide up rectangle
# ws are vertical measurements to divide up rectangle

# total_w, total_h, count_x, count_y = [200, 100, 20, 10]
# hs = [11, 25, 26, 29, 30, 40, 44, 56, 65, 71, 87, 98, 100, 108, 130, 149, 153, 161, 173, 179, 200]
# ws = [1, 11, 16, 17, 19, 37, 38, 53, 65, 69, 100]
# EXPECTED RESULT: 123

# Hi-density 1
# total_w, total_h, count_x, count_y = (10000, 9000, 123, 201)
# hs = [1, 14, 79, 126, 390, 506, 573, 690, 747, 778, 798, 887, 896, 907, 912, 1026, 1122, 1172, 1193, 1223, 1380, 1557, 1693, 1759, 1840, 2050, 2063, 2279, 2321, 2332, 2396, 2468, 2514, 2664, 2803, 2813, 2823, 2886, 2913, 3131, 3363, 3426, 3580, 3583, 3780, 3979, 3981, 4014, 4102, 4198, 4284, 4355, 4666, 4693, 4708, 4718, 4926, 5055, 5094, 5121, 5292, 5298, 5299, 5372, 5406, 5532, 5634, 5800, 5801, 5835, 5838, 5851, 5875, 6183, 6305, 6358, 6359, 6433, 6479, 6589, 6600, 6609, 6635, 6766, 6774, 6906, 6940, 6957, 6978, 7004, 7008, 7086, 7226, 7413, 7442, 7525, 7536, 7573, 7625, 7693, 7721, 8004, 8113, 8252, 8300, 8303, 8385, 8390, 8523, 8526, 8688, 8733, 8766, 9027, 9075, 9170, 9196, 9198, 9223, 9331, 9497, 9910, 9945, 10000]
# ws = [59, 60, 63, 128, 132, 146, 183, 249, 270, 303, 380, 387, 467, 606, 643, 663, 682, 707, 728, 734, 799, 851, 1019, 1078, 1105, 1116, 1122, 1126, 1167, 1237, 1327, 1402, 1436, 1439, 1635, 1674, 1718, 1751, 1817, 1864, 1865, 1871, 1921, 1995, 2001, 2085, 2089, 2214, 2274, 2282, 2399, 2442, 2443, 2447, 2564, 2569, 2577, 2875, 2937, 2988, 2992, 3017, 3121, 3162, 3202, 3216, 3226, 3228, 3259, 3416, 3426, 3443, 3475, 3795, 3852, 3879, 3920, 3993, 4038, 4039, 4052, 4137, 4207, 4243, 4248, 4251, 4270, 4328, 4346, 4354, 4369, 4379, 4389, 4396, 4413, 4426, 4477, 4491, 4501, 4508, 4531, 4533, 4544, 4659, 4666, 4720, 4769, 4846, 4877, 4977, 5036, 5143, 5254, 5348, 5416, 5425, 5452, 5468, 5523, 5580, 5601, 5611, 5613, 5620, 5714, 5722, 5724, 5748, 5759, 5794, 5803, 5927, 5979, 6042, 6101, 6115, 6168, 6177, 6184, 6230, 6269, 6336, 6343, 6416, 6428, 6709, 6756, 6786, 6813, 6895, 6919, 6945, 6971, 7099, 7114, 7142, 7179, 7241, 7267, 7381, 7401, 7412, 7416, 7422, 7427, 7456, 7514, 7519, 7533, 7555, 7577, 7597, 7735, 7739, 7745, 7777, 7780, 7859, 7913, 7917, 7948, 7984, 7999, 8000, 8035, 8051, 8071, 8143, 8155, 8228, 8392, 8480, 8490, 8575, 8653, 8677, 8731, 8754, 8830, 8867, 8887, 9000]
# EXPECTED RESULT: 22281

# Hi-density 2
total_w, total_h, count_x, count_y = [20000, 20000, 180, 180]
hs = [90, 117, 306, 744, 954, 1005, 1327, 1604, 2099, 2167, 2244, 2272, 2350, 2466, 2758, 2816, 2829, 2860, 2963, 3040, 3202, 3265, 3298, 3600, 4055, 4158, 4159, 4272, 4308, 4325, 4382, 4595, 4857, 4894, 4953, 4955, 5091, 5145, 5193, 5797, 5812, 5839, 5899, 5912, 5963, 6044, 6142, 6161, 6703, 6802, 6869, 6950, 7025, 7028, 7217, 7669, 7748, 7804, 8018, 8114, 8118, 8200, 8203, 8422, 8683, 8692, 8697, 8711, 8806, 8839, 8927, 9006, 9189, 9266, 9382, 9391, 9516, 9534, 9630, 9764, 9791, 9853, 9881, 10088, 10121, 10271, 10317, 10327, 10550, 10559, 10624, 10944, 11005, 11135, 11212, 11331, 11393, 11449, 11490, 11764, 11804, 11875, 11909, 12011, 12045, 12091, 12159, 12398, 12453, 12559, 12621, 12693, 13144, 13196, 13205, 13262, 13275, 13323, 13538, 13608, 14153, 14291, 14346, 14518, 14520, 14560, 14689, 14765, 14957, 15042, 15082, 15382, 15477, 15539, 15586, 15612, 15630, 15719, 15805, 16101, 16142, 16300, 16379, 16563, 16580, 16685, 16774, 16919, 17010, 17056, 17470, 17482, 17512, 17520, 17709, 17722, 17782, 17800, 17829, 17945, 18048, 18071, 18181, 18279, 18330, 18492, 18554, 18653, 18906, 18938, 19279, 19294, 19339, 19587, 19590, 19672, 19695, 19730, 19854, 19950, 20000]
ws = [90, 177, 485, 652, 664, 793, 797, 943, 1151, 1271, 1506, 1569, 1650, 1789, 1906, 2037, 2077, 2221, 2241, 2323, 2354, 2533, 2588, 2858, 3039, 3223, 3360, 3480, 3483, 3587, 3635, 3842, 3919, 3962, 4356, 4410, 4563, 4949, 4997, 5059, 5074, 5090, 5175, 5187, 5256, 5309, 5354, 5384, 5848, 5995, 6374, 6506, 6516, 6547, 6563, 6628, 6632, 6709, 6910, 6916, 6947, 6983, 7203, 7345, 7602, 7800, 7844, 7858, 7955, 8206, 8213, 8317, 8400, 8435, 8488, 8538, 8580, 8710, 8813, 8815, 8887, 8896, 8913, 9111, 9124, 9209, 9317, 9345, 9350, 9544, 9593, 9945, 10125, 10208, 10225, 10270, 10522, 10993, 11014, 11025, 11118, 11231, 11481, 11538, 11742, 11761, 11856, 11887, 12078, 12112, 12325, 12506, 12601, 12617, 12620, 12719, 12763, 12875, 12917, 13257, 13403, 13485, 13488, 13635, 13727, 13814, 13863, 13882, 13921, 13996, 14027, 14068, 14139, 14338, 14410, 14526, 14563, 14617, 14620, 14691, 14763, 14786, 14978, 15215, 15730, 15776, 15941, 15964, 16094, 16174, 16182, 16303, 16309, 16450, 16458, 16649, 16703, 17008, 17143, 17220, 17330, 17628, 17877, 18203, 18390, 18463, 18486, 18611, 18692, 18693, 18729, 18902, 18978, 19219, 19299, 19355, 19373, 19506, 19520, 19599, 20000]
# EXPECTED RESULT: 18431

squares = 0

# Check for same h's and w's which make squares...
squares = len([w for w in ws if w in hs])

h_diff = [hs[h]-hs[h_2] for h in range(len(hs)-1,0,-1) for h_2 in range(h-1,-1,-1)]
w_diff = [ws[w]-ws[w_2] for w in range(len(ws)-1,-1,-1) for w_2 in range(w-1,-1,-1)]

# This method is faster than trying with list comprehension
for h in h_diff:
    squares = squares + ws.count(h)
    squares = squares + w_diff.count(h)

w_2_diff = [ws[w]-ws[w_2] for w in range(len(ws)-1,0,-1) for w_2 in range(w-1,-1,-1)]

for h in hs:
    squares = squares + w_2_diff.count(h)

print(squares)